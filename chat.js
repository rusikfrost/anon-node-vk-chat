const needle = require('needle');
const mongoClient = require("mongodb").MongoClient;
const { Bot } = require('node-vk-bot');
const VK = require('vk-bot-sdk');
const groupToken = ('–¢–æ–∫–µ–Ω_–ì—Ä—É–ø–ø—ã');
const adminToken = ('–¢–æ–∫–µ–Ω_–ê–¥–º–∏–Ω–∞');
const groupId = ('168918774');
const Group = new VK.Group(groupToken);
const bot = new Bot({

token: groupToken
}).start()

bot.get(/#–ù–∏–∫|#–ùi–∫|#Nick/i, message => {

const str = message.body,
	 n = str.lastIndexOf(':'),
	 result = str.substring(n + 1);

console.log(result);

const options = {user_id:message.user_id}
bot.send('–¢–µ–ø–µ—Ä—å –í–∞—à –Ω–∏–∫ - ' + result, message.peer_id, options)

const url = "mongodb://localhost:27017/";
mongoClient.connect(url, function(err, client){
      
    const db = client.db("usersdb");
    const collection = db.collection("nick_test");

    let user = { id: message.user_id, nick: result, admin: false };
    collection.remove({id : message.user_id})
    collection.insertOne(user, function(err, result){
          
        if(err){ 
            return console.log(err);
        }
        console.log(result.ops);
        client.close();
    });
});
});

bot.get(/#Ban|#–∑–∞–±–∞–Ω|#–ë–∞–Ω/i, message => {

const str = message.body,
	n = str.lastIndexOf(':'),
	resultets = str.substring(n + 1);

const url = "mongodb://localhost:27017/";
mongoClient.connect(url, function(err, client){
      
    const db = client.db("usersdb");
    const collection = db.collection("nick_test");
 
if(err) return console.log(err);
	collection.find({nick: resultets}).toArray(function(err, results){

const url = encodeURI("https://api.vk.com/api.php?oauth=1&method=groups.ban&group_id="+groupId+"&user_id="+ results[0].id +"&v=5.67&access_token=" + adminToken);
needle.get(url, function(err, resp){
if (!err && resp.statusCode == 200)
    console.log('user is banned');
});  

const url = encodeURI("https://api.vk.com/api.php?oauth=1&method=groups.getMembers&group_id="+groupId+"&count=1000&v=5.67&access_token=" + groupToken);
needle.get(url, function(err, resp){
    if (!err && resp.statusCode == 200)
const re = (resp.body['response']),
	items = (re.items),
	items_cover = (''+items+''),
	user_id_who_send_message = message.user_id,
	arr = items,
	index = arr.indexOf(user_id_who_send_message);
if (index >= 0) {
  arr.splice( index, 1 );
}

const ready_array = (''+arr+'');
Group.sendToIds([items_cover], resultets + ' –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –±–µ—Å–µ–¥—ã.')
client.close();

}); 
});  
});
});


bot.get(/#Info|#i–Ω—Ñ–æ|#–ò–Ω—Ñ–æ/i, message => {
const options =  {}
bot.send('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–Ω–æ–Ω–∏–º–Ω—É—é –±–µ—Å—Å–µ–¥—É. \n –ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –Ω–∏–∫, –ø–∏—à–∏ \n \n #nick: –¢–≤–æ–π–ù–∏–∫ \n \n –ó–¥–µ—Å—å —Ü–∞—Ä–∏—Ç –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ —Å–≤–æ–±–æ–¥—ã –∏ –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏. \n –ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ [id300397513|–°–µ–Ω—Å–µ—é –°–æ–∑–¥–∞—Ç–µ–ª—é.] \n \n –û–Ω —Å —Ä–∞–¥–æ—Å—Ç—å—é –æ—Ç–≤–µ—Ç–∏—Ç. ', message.peer_id, options)
});


bot.get(/join|group|club/i, message => {
const options =  {}
bot.send('–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Ö–≤–∞—á–µ–Ω–æ –±–æ—Ç–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏ –Ω–µ –±—É–¥–µ—Ç –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ –∞–¥—Ä–µ—Å–∞—Ç–∞–º.', message.peer_id, options)
});


bot.get(/||/i, message => {


Group.isMember(message.user_id, (isSubscriber) => {
  if (isSubscriber) {
     console.log('–ü–æ–¥–ø–∏—Å–∞–Ω');
  
    if( message.body == ''){
        const options =  {}
        bot.send('–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å—é–¥–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª—ã –∏ —Å—Ç–∏–∫–µ—Ä—ã. –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ç–æ –∏–ª–∏ –∑–∞–ø–∏—Å–∏ - –ø—Ä–∏—à–ª–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –Ω–µ–µ.', message.peer_id, options)
    } else {

var url = encodeURI("https://api.vk.com/api.php?oauth=1&method=groups.getMembers&group_id="+groupId+"&count=1000&v=5.67&access_token=" + groupToken);
needle.get(url, function(err, resp){
    if (!err && resp.statusCode == 200)
const re = (resp.body['response']),
	items = (re.items),
	items_cover = (''+items+''),
	user_id_who_send_message = message.user_id,
	arr = items,
	index = arr.indexOf(user_id_who_send_message);
    if (index >= 0) {
        arr.splice( index, 1 );
    }

const ready_array = (''+arr+'');

const url = "mongodb://localhost:27017/";
mongoClient.connect(url, function(err, client){
      
    const db = client.db("usersdb");
    const collection = db.collection("nick_test");
 
    if(err) return console.log(err);

const nick = ('Anon');
let dbfind = collection.find({id: message.user_id}).toArray(function(err, results){

    if(results != ''){
        var nick = (results[0].nick);
     }

Group.sendToIds([ready_array],'[club'+groupId+'|' + nick + ']: ' + message.body)

});
});
});  
}
} else {
const options =  {}
bot.send('–û—Ç–ª–∏—á–Ω–æ, —Ç—ã –≤ –±–µ—Å–µ–¥–µ. \n üê®üê®üê®üê®üê®üê®üê®üê®üê®üê®üê® \n –¢–µ–ø–µ—Ä—å –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –¥—Ä—É–≥–∏—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ - –ø–æ–¥–ø–∏—à–∏—Å—å –∏ –ø–æ–ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–π –±–µ—Å–µ–¥—É. \n \n  –û–±—â–µ–Ω–∏–µ –±—É–¥–µ—Ç –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –≤ —ç—Ç–æ–π –≥—Ä—É–ø–ø–µ. \n \n –ë–æ—Ç –∞–Ω–æ–Ω–∏–º–∏–∑–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –¥—Ä—É–≥–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∏ –Ω–µ —É–≤–∏–¥—è—Ç –¥–∞–Ω–Ω—ã—Ö –æ —Ç–µ–±–µ (–∫—Ä–æ–º–µ –Ω–∏–∫–∞). \n\n –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∏–∫–∞, –ø–æ—Å–ª–µ –ø–æ–¥–ø–∏—Å–∫–∏ –≤–≤–µ–¥–∏ \n \n #nick: –¢–≤–æ–π–ù–∏–∫ \n \n –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –æ–±—â–µ–Ω–∏—è!', message.peer_id, options)
  }
})
});
